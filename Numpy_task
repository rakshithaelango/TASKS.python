#1  Import the numpy package under the name  
        import numpy as np
       
#2  Print the numpy version and the configuration  
        print(np.__version__)
        print(np.show_config)#
        
#3  Create a null vector of size 10
        x = np.zeros(10)
        x
        
#4  How to find the memory size of any array    
        x = np.array([100,20,34])
        print(x.size)
        x = np.array([100,20,34])
        print(x.itemsize)
        
        print(x.size * x.itemsize)
        
#5 How to get the documentation of the numpy add function from the command line?
         "import numpy; numpy.info(numpy.add)"
         
#6 Create a null vector of size 10 but the fifth value which is 1
          a=np.zeros(10)
          a[4]=1
          print(a)
          
#7 Create a vector with values ranging from 10 to 49
           np.arange(10, 50)
           
#8  Reverse a vector (first element becomes last)
           a=np.array([2,4,6,8,0])
           print(a[::-1])
           
#9 Create a 3x3 matrix with values ranging from 0 to 8
          a=np.arange(0,9)
          print(a)
          b_=a.reshape(3,3)
          print(b_a)

#10 Find indices of non-zero elements from [1,2,0,0,4,0]
         a= np.nonzero([1,2,0,0,4,0])
         print(a)

#11 Create a 3x3 identity matrix
         I = np.eye(3)
         I

#12 Create a 3x3x3 array with random values
          a = np.random.random([3,3,3])
          a

#13 Create a 10x10 array with random values and find the minimum and maximum values 
         a=np.random.randint(1,10,(4,4))
         print(a)
         print(a.min())
         print(a.max())

#14  Create a random vector of size 30 and find the mean value
        a = np.random.random((30))
        a.mean()

#15 Create a 2d array with 1 on the border and 0 inside
        a=np.ones((15,5))
        a[1:-1,1:-1]=0
        print(a)

#16  How to add a border (filled with 0's) around an existing array?
        Z = np.ones((5,5))
        Z = np.pad(Z, pad_width=1, mode='constant', constant_values=0)
        print(Z)

#17  What is the result of the following expression?
        0 * np.nan
        np.nan == np.nan
        np.inf > np.nan
        np.nan - np.nan
        0.3 == 3 * 0.1
      = False

#18 Create a 5x5 matrix with values 1,2,3,4 just below the diagonal 
         a=np.diag(np.arange(1,5),k=-1)
         print(a)

#19 Create a 8x8 matrix and fill it with a checkerboard pattern
         a = np.ones ((8,8), dtype=int)
         a[1::2,::2]= 0
         a[::2, 1::2] = 0
         print (a)

#20 Consider a (6,7,8) shape array, what is the index (x,y,z) of the 100th element
         print (np.unravel_index(100, (6,7,8)))

#21 Create a checkerboard 8x8 matrix using the tile function











